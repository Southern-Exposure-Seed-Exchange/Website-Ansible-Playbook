server {
    listen [::]:443 ssl http2 default_server ipv6only=off;

    server_name _;

    root /var/www/client;
    index index.html;

    # Logs
    access_log /var/www/logs/access.log combined buffer=16k;
    error_log /var/www/logs/error.log;

    # Allow Large Request Bodies
    client_max_body_size 30M;
    client_body_buffer_size 32k;

    # Remove NGINX Header
    server_tokens off;

    # Tell Browsers to Always Upgrade Requests to HTTPS
    add_header Strict-Transport-Security "max-age=31536000;" always;
    # Only Allow Embedding in Frames From the Same Site
    add_header X-Frame-Options sameorigin always;
    # Block MimeType Sniffing for Script & Style Tags
    add_header X-Content-Type-Options nosniff;
    # Tell Browsers to BLock XSS Attacks
    add_header X-XSS-Protection "1; mode=block";

    # Gzip Options
    gzip on;
    gzip_buffers 16 16k;
    gzip_comp_level 5;
    gzip_http_version 1.0;
    gzip_proxied any;
    gzip_types
        text/plain text/css
        application/json application/javascript text/javascript
        text/xml application/xml application/xml+rss
        application/x-font-ttf image/x-icon
        ;
    gzip_vary on;

    # SSL Configuration
{% if use_letsencrypt and ssl_cert_check.stat.exists %}
    ssl_certificate /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem;
{% else %}
    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
{% endif %}
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA:TLS_DHE_RSA_WITH_AES_256_CBC_SHA;
    ssl_session_cache shared:SSL:10m;
    ssl_ecdh_curve X25519:prime256v1:secp384r1;
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7

    # For LetsEncrypt Certificate Verification
    location /.well-known {
        root /var/www/html;
    }

    # Fallback to Client's index.html
    location / {
        try_files $uri @prerender;
    }

    # Prerender config is lifted from the official NGINX middleware gist
    location @prerender {
        set $prerender 0;
        # But we added some user agents to this list
        if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|redditbot|discordbot|duckduckbot|slurp|exabot|facebot|ia_archiver|adsbot|bingpreview|google-structured-data-testing-tool|mediapartners-google") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff2?|svg|eot)") {
            set $prerender 0;
        }
        # And we ignore some known static directories
        if ($uri ~* "^/(blog|media|images|api|static)") {
            set $prerender 0;
        }

        if ($prerender = 1) {
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass http://127.0.0.1:5000;
        }
        if ($prerender = 0) {
            rewrite .* /index.html break;
        }
    }

    # Serve Media from /var/www/media
    location /media/ {
        root /var/www/;
    }

    # Proxy the API Server
    location /api/ {
        proxy_pass http://127.0.0.1:3000/;
    }

    resolver "8.8.8.8";
    # Proxy the Offsite Wordpress Blog
    location /blog/ {
        proxy_pass https://vps.southernexposure.com/blog/;
    }
    location ~* /blog/wp-content/(.*) {
        proxy_pass https://vps.southernexposure.com/blog/wp-content/$1;
    }

    # Proxy the Old Images to the Old Server
    location ~* /images/(.*) {
        proxy_pass https://vps.southernexposure.com/images/$1;
    }


    # Cache Static Assets for a Long Time
    location ~* .(jpg|jpeg|png|gif|ico|css|js|ttf|woff2?)$ {
        expires 365d;
    }


    # Redirects for Old Site's URLs
    rewrite ^/[A-Za-z0-9-]+?-c-[0-9_]*?_([0-9]+).html$ /api/redirects/category/$1 redirect;
    rewrite ^/[A-Za-z0-9-]+?-p-([0-9]+).html$ /api/redirects/product/$1 redirect;
    rewrite ^/[A-Za-z0-9-]+?-ezp-([0-9]+).html$ /api/redirects/page/$1 redirect;
    rewrite ^/contact_us.html$ /contact-us/ redirect;
    location = /index.php {
        if ($args ~* "main_page=quick_order") {
            set $args "";
            rewrite ^.*$ /quick-order/ redirect;
        }
        if ($args ~* "main_page=login") {
            set $args "";
            rewrite ^.*$ /account/login/ redirect;
        }
        if ($args ~* "main_page=create_account") {
            set $args "";
            rewrite ^.*$ /account/create/ redirect;
        }
        if ($args ~* "main_page=account") {
            set $args "";
            rewrite ^.*$ /account/ redirect;
        }
        if ($args ~* "main_page=advanced_search") {
            set $args "";
            rewrite ^.*$ /search/advanced/ redirect;
        }
        if ($args ~* "main_page=products_all") {
            set $args "";
            rewrite ^.*$ /all-products/ redirect;
        }
        if ($args ~* "main_page=products_all&organic=1") {
            set $args "";
            rewrite ^.*$ /organic/ redirect;
        }
        if ($args ~* "main_page=products_all&heirloom=1") {
            set $args "";
            rewrite ^.*$ /heirloom/ redirect;
        }
        if ($args ~* "main_page=products_all&southern=1") {
            set $args "";
            rewrite ^.*$ /south-east/ redirect;
        }
        if ($args ~* "main_page=products_all&small-grower=1") {
            set $args "";
            rewrite ^.*$ /small-grower/ redirect;
        }
    }
}

# Redirect all HTTP requests to HTTPS
server {
    listen [::]:80 default_server ipv6only=off;

    server_name _;

    # Tell Browsers to Always Upgrade Requests to HTTPS
    add_header Strict-Transport-Security "max-age=31536000;" always;
    # Only allow embedding in frames from the same site
    add_header X-Frame-Options "sameorigin;" always;

    return 302 https://$host$request_uri;
}

# vim: set ft=nginx synmaxcol=500 :
