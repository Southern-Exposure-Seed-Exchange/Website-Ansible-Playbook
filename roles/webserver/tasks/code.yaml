---


# Stack

- name: Install Stack Dependencies
  apt:
    name:
      - g++
      - gcc
      - libc6-dev
      - libffi-dev
      - libgmp-dev
      - make
      - xz-utils
      - zlib1g-dev
      - git
      - gnupg
      - netbase
  become: true

- name: Make Directory for Stack
  file:
    dest: ~/stack-unpacked
    state: directory
  become: true

- name: Unpack Stack Archive
  unarchive:
    remote_src: true
    src: https://get.haskellstack.org/stable/linux-x86_64-static.tar.gz
    dest: ~/stack-unpacked/
    creates: /usr/bin/stack
  become: true

- name: Install Stack
  shell: mv -f ~/stack-unpacked/*/stack /usr/bin/ && rm -rf ~/stack-unpacked/*
  args:
    creates: /usr/bin/stack
  become: true

- name: Ensure Stack Executable Has Proper Permissions
  file:
    path: /usr/bin/stack
    mode: '0755'
  become: true


# Node

- name: Add NodeJS Repository Key
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
  become: true

- name: Add NodeJS Repository
  apt_repository:
    repo: "{{ item }} https://deb.nodesource.com/node_{{ node_version }}.x {{ distro_version }} main"
    filename: "node-{{ node_version }}"
  with_items:
    - deb
    - deb-src
  become: true

- name: Install NodeJS
  apt:
    name: nodejs
    update_cache: true
  become: true


# Website

- name: Install Website Dependencies
  apt:
    name:
      - gifsicle
      - graphicsmagick-imagemagick-compat
      - libjpeg-turbo-progs
      - libssl-dev
      - optipng
      - unzip
  become: true

- name: Create a User for the Website
  user:
    name: sese-website
  become: true

- name: Clone the Website Repository
  git:
    repo: https://github.com/Southern-Exposure-Seed-Exchange/southernexposure.com.git
    accept_hostkey: true
    dest: ~/code
  become: true
  become_user: sese-website

- name: Ensure the Website Code Has Been Built Once
  command: ./manage.hs build
  args:
    chdir: ~/code
    creates: ~/code/server/.stack-work
  become: true
  become_user: sese-website

- name: Install the Environment File for the API Server
  template:
    dest: ~/website-env
    src: website-env.j2
    mode: '0600'
  notify: restart server
  become: true
  become_user: sese-website

- name: Install the API Server SystemD Service
  copy:
    src: roles/webserver/files/systemd_api_server.service
    dest: /etc/systemd/system/api-server.service
  notify: restart server
  become: true

- name: Ensure API Server Service is Enabled & Started
  systemd:
    name: api-server
    state: started
    enabled: true
  become: true
